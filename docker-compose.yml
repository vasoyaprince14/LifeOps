services:
  postgres:
    image: postgres:15-alpine
    container_name: lifeops-postgres
    environment:
      POSTGRES_DB: lifeops
      POSTGRES_USER: lifeops
      POSTGRES_PASSWORD: lifeops
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "lifeops"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: lifeops-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgres://lifeops:lifeops@postgres:5432/lifeops
      JWT_SECRET: devsecret
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-http://localhost:3001/integrations/google/callback}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "3001:3001"
    restart: unless-stopped

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: lifeops-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://backend:3001
      NEXT_PUBLIC_FRONTEND_URL: http://localhost:3000
    depends_on:
      - backend
    ports:
      - "3000:3000"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: lifeops-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  pgdata:

